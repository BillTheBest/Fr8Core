@using Data.Interfaces.DataTransferObjects;

@*
    This fine contains a map of snippets which are rendered by Angular depending on field type 
    Type check occurs with help of the ng-if directive on the outermost <div> of the snippet.
*@
<div class='form-group'>
    @* 
        Check box template
    *@
    <div class='col-sm-offset-1' ng-if='field.type == "@ControlTypes.CheckBox"'>
        <div class='checkbox checkbox-primary'>
            <input type='checkbox' ng-model='field.selected' ng-click="onChange($event)" data-field-name='{{::field.name}}' 
                   id='pca__chk__{{::field.name}}{{::currentAction.id}}' name='pca__chk__{{::field.name}}{{::currentAction.id}}' 
                   stop-click-propagation>
            <label for='pca__chk__{{::field.name}}{{::currentAction.id}}' stop-click-propagation>{{::field.label}}</label>
        </div>
    </div>

    @*
        Textbox template
    *@
    <div ng-if='field.type == "@ControlTypes.TextBox"'>
        <label class='control-label'>{{::field.label}}</label>
        <input type='text' ng-model='field.value' ng-model-options="{ updateOn: 'default blur', debounce: { 'default': 500, 'blur': 0 } }" 
               ng-blur="onChange($event)" ng-required='field.required' data-field-name='{{::field.name}}' id='pca__txt__{{::field.name | validId}}' 
               class='form-control form-control-focus' name='pca__txt__{{::field.name | validId}}' stop-click-propagation>
    </div>

    @*
        Filepicker template
    *@
    <div ng-if='field.type == "@ControlTypes.FilePicker"'>
        <label class='control-label'>{{::field.label}}</label>
        <file-picker field='field'></file-picker>
    </div>  
    
    @*
        RadioButtonGroup template
    *@
    <div ng-if='field.type == "@ControlTypes.RadioButtonGroup"'>
        <label class='control-label'>{{::field.label}}</label>
        <radio-button-group field='field' current-action='currentAction'></radio-button-group>
    </div>  
    
    @*
        DownDownList template
    *@
    <div ng-if='field.type == "@ControlTypes.DropDownList"'>
        <label ng-if="field.label !== null && field.label.length > 0" class='control-label'>{{::field.label}}</label>
        <drop-down-list-box field='field' change='onChange' data-field-name='{{::field.name}}'></drop-down-list-box>
    </div>  
    
    @*
        TextBlock template
    *@
    <div ng-if='field.type == "@ControlTypes.TextBlock"'>
        <label class='control-label'>{{::field.label}}</label>
        <text-block field='field'></text-block>
    </div> 

    @*
        FilterPane template
    *@
    <div ng-if='field.type == "@ControlTypes.FilterPane"'>
        <filter-pane current-action='currentAction' field='field'></filter-pane>
    </div>

    @*
        MappingPane template
    *@
    <div ng-if='field.type == "@ControlTypes.MappingPane"'>
        <label class='control-label'>{{::field.label}}</label>
        <mapping-pane current-action='currentAction' field='field'></mapping-pane>
    </div>

    @*
        Routing control group template
    *@
    <div ng-if='field.type == "@ControlTypes.Routing"'>
        <div class="container_box" ng-repeat="route in field.routes">
            <routing-control route="route" />
        </div>
    </div>

    @*
        Field List control template
    *@
    <div ng-if='field.type == "@ControlTypes.FieldList"'>
        <label class="conrol-label">{{::field.label}}</label>
        <field-list field="field" change="onChange"></field-list>
    </div>

    @*
        Button template
    *@
    <div ng-if='field.type == "@ControlTypes.Button"'>
        <button ng-click="onClick($event)" data-field-name='{{::field.name}}' id='pca__btn__{{::field.name | validId}}' class="{{::field.class || "btn btn-success"}}" name='pca__btn__{{::field.name | validId}}'>{{::field.label}}</button>
    </div>

    @*
    TextSource template
    *@
    <div ng-if='field.type == "@ControlTypes.TextSource"'>
        <text-source change="onChange" data-field-name='{{::field.name}}' field="field"></text-source>
    </div>

    @*
        TextArea template
    *@
    <div ng-if='field.type == "@ControlTypes.TextArea"'>
        <label ng-if="field.label !== null && field.label.length > 0" class='control-label'>{{::field.label}}</label>
        <text-area field='field'></text-area>
    </div> 

    @* Add more configuration field templates below *@
</div>